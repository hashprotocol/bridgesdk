{"version":3,"file":"bridgesdk.cjs.development.js","sources":["../src/constants.ts","../src/errors.ts","../src/utils.ts","../src/entities/currency.ts","../src/entities/token.ts","../src/entities/fractions/fraction.ts","../src/entities/fractions/currencyAmount.ts","../src/entities/fractions/tokenAmount.ts","../src/entities/fractions/price.ts","../src/entities/pair.ts","../src/entities/route.ts","../src/entities/fractions/percent.ts","../src/entities/trade.ts","../src/router.ts","../node_modules/regenerator-runtime/runtime.js","../src/fetcher.ts"],"sourcesContent":["import JSBI from 'jsbi'\n\n// exports for external consumption\nexport type BigintIsh = JSBI | bigint | string\n\nexport enum ChainId {\n  MAINNET = 1,\n  ROPSTEN = 3,\n  RINKEBY = 4,\n  GÃ–RLI = 5,\n  KOVAN = 42,\n  FUJI = 43113,\n  AVALANCHE = 43114,\n  SMART_CHAIN = 56,\n  SMART_CHAIN_TEST = 97,\n  MOONBASE_ALPHA = 1287,\n  MOONRIVER = 1285,\n  MUMBAI = 80001,\n  MATIC = 137,\n  HECO = 128,\n  FANTOM = 250,\n  ALGORAND = 250,\n  SHIDEN = 336,\n  IOTEX = 4689,\n  HARMONY = 1666600000,\n  CRONOS = 25,\n  OKEX = 66,\n  MULTIVAC = 62621,\n  METIS_NETWORK = 1088,\n  MOONBEAM = 1284\n}\n\nexport const ETHERSCAN_PREFIXES = {\n  1: '',\n  3: 'ropsten.',\n  4: 'rinkeby.',\n  5: 'goerli.',\n  42: 'kovan.',\n  43113: 'FUJI',\n  43114: 'AVALANCHE',\n  97: 'SMART_CHAIN_TEST',\n  56: 'SMART_CHAIN',\n  1287: 'MOONBASE_ALPHA',\n  80001: 'MUMBAI',\n  137: 'MATIC',\n  128: 'HECO',\n  1285: 'MOONRIVER',\n  250: 'FANTOM',\n  300: 'ALGORAND',\n  336: 'SHIDEN',\n  4689: 'IOTEX',\n  1666600000: 'HARMONY',\n  25: 'CRONOS',\n  66: 'OKEX',\n  62621: 'MULTIVAC',\n  1088: 'METIS_NETWORK',\n  1284: 'MOONBEAM'\n\n}\n\nexport enum TradeType {\n  EXACT_INPUT,\n  EXACT_OUTPUT\n}\n\nexport enum Rounding {\n  ROUND_DOWN,\n  ROUND_HALF_UP,\n  ROUND_UP\n}\n\nexport const FACTORY_ADDRESS = '0x2Ef422F30cdb7c5F1f7267AB5CF567A88974b308'\nexport const INIT_CODE_HASH = '0x4b5b254233f8aba1e01c0538653d54036e3c9f7873daf99623bb358f1cf33188'\n\n// export const FACTORY_ADDRESS = '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f'\n// export const INIT_CODE_HASH = '0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f'\n\nexport const FACTORY_AND_INIT: any = {\n  [ChainId.MAINNET]: {\n    factoryAddress: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\n    initCodeHash: '0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f'\n  },\n  [ChainId.RINKEBY]: {\n    factoryAddress: '0x875D0F2ad61803927c087ac2ef82539706f5364C',\n    initCodeHash: '0x4b5b254233f8aba1e01c0538653d54036e3c9f7873daf99623bb358f1cf33188'\n  },\n  [ChainId.AVALANCHE]: {\n    factoryAddress: '0x2Ef422F30cdb7c5F1f7267AB5CF567A88974b308',\n    initCodeHash: '0x4b5b254233f8aba1e01c0538653d54036e3c9f7873daf99623bb358f1cf33188'\n  },\n  [ChainId.FUJI]: {\n    factoryAddress: '0xeEdaAB3cdb85B77430f2272f6cDbaE2020F48c80',\n    initCodeHash: '0x4b5b254233f8aba1e01c0538653d54036e3c9f7873daf99623bb358f1cf33188'\n  },\n  [ChainId.SMART_CHAIN]: {\n    factoryAddress: '0x52AbdB3536a3a966056e096F2572B2755df26eac',\n    initCodeHash: '0x4b5b254233f8aba1e01c0538653d54036e3c9f7873daf99623bb358f1cf33188'\n  },\n  [ChainId.SMART_CHAIN_TEST]: {\n    factoryAddress: '0x2583e5E9c4E0CA0C4F4DfFA5eacC1ce1fC0e277c',\n    initCodeHash: '0x4b5b254233f8aba1e01c0538653d54036e3c9f7873daf99623bb358f1cf33188'\n  },\n  [ChainId.MOONBASE_ALPHA]: {\n    factoryAddress: '0x2583e5E9c4E0CA0C4F4DfFA5eacC1ce1fC0e277c',\n    initCodeHash: '0x4b5b254233f8aba1e01c0538653d54036e3c9f7873daf99623bb358f1cf33188'\n  },\n  [ChainId.MUMBAI]: {\n    factoryAddress: '0xeEdaAB3cdb85B77430f2272f6cDbaE2020F48c80',\n    initCodeHash: '0x4b5b254233f8aba1e01c0538653d54036e3c9f7873daf99623bb358f1cf33188'\n  },\n  [ChainId.MATIC]: {\n    factoryAddress: '0x6FD98Cf211134081fe02F551D64Cf89671D5443b',\n    initCodeHash: '0x4b5b254233f8aba1e01c0538653d54036e3c9f7873daf99623bb358f1cf33188'\n  },\n  [ChainId.HECO]: {\n    factoryAddress: '0xf54e0e467f9644b73819637b30de52b5a1d511e6',\n    initCodeHash: '0x4b5b254233f8aba1e01c0538653d54036e3c9f7873daf99623bb358f1cf33188'\n  },\n}\n\nexport const MINIMUM_LIQUIDITY = JSBI.BigInt(1000)\n\n// exports for internal consumption\nexport const ZERO = JSBI.BigInt(0)\nexport const ONE = JSBI.BigInt(1)\nexport const TWO = JSBI.BigInt(2)\nexport const THREE = JSBI.BigInt(3)\nexport const FIVE = JSBI.BigInt(5)\nexport const TEN = JSBI.BigInt(10)\nexport const _100 = JSBI.BigInt(100)\nexport const _997 = JSBI.BigInt(997)\nexport const _1000 = JSBI.BigInt(1000)\n\nexport enum SolidityType {\n  uint8 = 'uint8',\n  uint256 = 'uint256'\n}\n\nexport const SOLIDITY_TYPE_MAXIMA = {\n  [SolidityType.uint8]: JSBI.BigInt('0xff'),\n  [SolidityType.uint256]: JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n}\n","// see https://stackoverflow.com/a/41102306\nconst CAN_SET_PROTOTYPE = 'setPrototypeOf' in Object\n\n/**\n * Indicates that the pair has insufficient reserves for a desired output amount. I.e. the amount of output cannot be\n * obtained by sending any amount of input.\n */\nexport class InsufficientReservesError extends Error {\n  public readonly isInsufficientReservesError: true = true\n\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n\n/**\n * Indicates that the input amount is too small to produce any amount of output. I.e. the amount of input sent is less\n * than the price of a single unit of output after fees.\n */\nexport class InsufficientInputAmountError extends Error {\n  public readonly isInsufficientInputAmountError: true = true\n\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n","import invariant from 'tiny-invariant'\nimport warning from 'tiny-warning'\nimport JSBI from 'jsbi'\nimport { getAddress } from '@ethersproject/address'\n\nimport { BigintIsh, ZERO, ONE, TWO, THREE, SolidityType, SOLIDITY_TYPE_MAXIMA } from './constants'\n\nexport function validateSolidityTypeInstance(value: JSBI, solidityType: SolidityType): void {\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), `${value} is not a ${solidityType}.`)\n  invariant(JSBI.lessThanOrEqual(value, SOLIDITY_TYPE_MAXIMA[solidityType]), `${value} is not a ${solidityType}.`)\n}\n\n// warns if addresses are not checksummed\nexport function validateAndParseAddress(address: string): string {\n  try {\n    const checksummedAddress = getAddress(address)\n    warning(address === checksummedAddress, `${address} is not checksummed.`)\n    return checksummedAddress\n  } catch (error) {\n    invariant(false, `${address} is not a valid address.`)\n  }\n}\n\nexport function parseBigintIsh(bigintIsh: BigintIsh): JSBI {\n  return bigintIsh instanceof JSBI\n    ? bigintIsh\n    : typeof bigintIsh === 'bigint'\n    ? JSBI.BigInt(bigintIsh.toString())\n    : JSBI.BigInt(bigintIsh)\n}\n\n// mock the on-chain sqrt function\nexport function sqrt(y: JSBI): JSBI {\n  validateSolidityTypeInstance(y, SolidityType.uint256)\n  let z: JSBI = ZERO\n  let x: JSBI\n  if (JSBI.greaterThan(y, THREE)) {\n    z = y\n    x = JSBI.add(JSBI.divide(y, TWO), ONE)\n    while (JSBI.lessThan(x, z)) {\n      z = x\n      x = JSBI.divide(JSBI.add(JSBI.divide(y, x), x), TWO)\n    }\n  } else if (JSBI.notEqual(y, ZERO)) {\n    z = ONE\n  }\n  return z\n}\n\n// given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\n// `maxSize` by removing the last item\nexport function sortedInsert<T>(items: T[], add: T, maxSize: number, comparator: (a: T, b: T) => number): T | null {\n  invariant(maxSize > 0, 'MAX_SIZE_ZERO')\n  // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\n  invariant(items.length <= maxSize, 'ITEMS_SIZE')\n\n  // short circuit first item add\n  if (items.length === 0) {\n    items.push(add)\n    return null\n  } else {\n    const isFull = items.length === maxSize\n    // short circuit if full and the additional item does not come before the last item\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add\n    }\n\n    let lo = 0,\n      hi = items.length\n\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1\n      } else {\n        hi = mid\n      }\n    }\n    items.splice(lo, 0, add)\n    return isFull ? items.pop()! : null\n  }\n}\n","import { ChainId, SolidityType } from '../constants'\n\nimport JSBI from 'jsbi'\nimport { validateSolidityTypeInstance } from '../utils'\n\n/**\n * A currency is any fungible financial instrument on Ethereum, including Ether and all ERC20 tokens.\n *\n * The only instance of the base class `Currency` is Ether.\n */\nexport class Currency {\n  public readonly decimals: number\n  public readonly symbol?: string\n  public readonly name?: string\n\n  /**\n   * The only instance of the base class `Currency`.\n   */\n  public static readonly ETHER: Currency = new Currency(18, 'ETH', 'Ether')\n  public static readonly AVAX: Currency = new Currency(18, 'AVAX', 'AVAX')\n  public static readonly BNB: Currency = new Currency(18, 'BNB', 'BNB')\n  public static readonly DEV: Currency = new Currency(18, 'DEV', 'DEV')\n  public static readonly MATIC: Currency = new Currency(18, 'MATIC', 'MATIC')\n  public static readonly HECO: Currency = new Currency(18, 'HT', 'HT')\n  public static readonly MOVR: Currency = new Currency(18, 'MOVR', 'MOVR')\n  public static readonly FTM: Currency = new Currency(18, 'FTM', 'FTM')\n  public static readonly SDN: Currency = new Currency(18, 'SDN', 'SDN')\n  public static readonly IOTX: Currency = new Currency(18, 'IOTX', 'IOTX')\n  public static readonly ONE: Currency = new Currency(18, 'ONE', 'ONE')\n  public static readonly CRO: Currency = new Currency(18, 'CRO', 'CRO')\n  public static readonly OKT: Currency = new Currency(18, 'OKT', 'OKT')\n  public static readonly MTV: Currency = new Currency(18, 'MTV', 'MTV')\n  public static readonly METIS: Currency = new Currency(18, 'METIS', 'METIS')\n  public static readonly GLMR: Currency = new Currency(18, 'GLMR', 'GLMR')\n\n  /**\n   * Constructs an instance of the base class `Currency`. The only instance of the base class `Currency` is `Currency.ETHER`.\n   * @param decimals decimals of the currency\n   * @param symbol symbol of the currency\n   * @param name of the currency\n   */\n  protected constructor(decimals: number, symbol?: string, name?: string) {\n    validateSolidityTypeInstance(JSBI.BigInt(decimals), SolidityType.uint8)\n\n    this.decimals = decimals\n    this.symbol = symbol\n    this.name = name\n  }\n}\n\nexport const ETHER = Currency.ETHER\nexport const AVAX = Currency.AVAX\nexport const BNB = Currency.BNB\nexport const DEV = Currency.DEV\nexport const MATIC = Currency.MATIC\nexport const HECO = Currency.HECO\nexport const MOVR = Currency.MOVR\nexport const FTM = Currency.FTM\nexport const SDN = Currency.SDN\nexport const IOTX = Currency.IOTX\nexport const ONE = Currency.ONE\nexport const CRO = Currency.CRO\nexport const OKT = Currency.OKT\nexport const MTV = Currency.MTV\nexport const METIS = Currency.METIS\nexport const GLMR = Currency.GLMR\n\nexport const ETHER_CURRENCIES = [ETHER, AVAX, BNB, DEV, MATIC, HECO, MOVR, FTM, SDN, IOTX, ONE, CRO, OKT, MTV, METIS, GLMR];\nexport const ETHER_NAMES_CURRENCIES = ['ETH', 'AVAX', 'BNB', 'DEV', 'MATIC', 'HT', 'MOVR', 'FTM', 'SDN', 'IOTX', 'ONE', 'CRO', 'OKT', 'MTV', 'METIS', 'GLMR'];\n\nexport const CHAIN_IDS_AND_CURRENCIES: ([ChainId, Currency])[] = [\n  [ChainId.MAINNET, ETHER],\n  [ChainId.ROPSTEN, ETHER],\n  [ChainId.RINKEBY, ETHER],\n  [ChainId.GÃ–RLI, ETHER],\n  [ChainId.KOVAN, ETHER],\n  [ChainId.FUJI, AVAX],\n  [ChainId.AVALANCHE, AVAX],\n  [ChainId.SMART_CHAIN, BNB],\n  [ChainId.SMART_CHAIN_TEST, BNB],\n  [ChainId.MOONBASE_ALPHA, DEV],\n  [ChainId.MOONRIVER, MOVR],\n  [ChainId.MUMBAI, MATIC],\n  [ChainId.MATIC, MATIC],\n  [ChainId.HECO, HECO],\n  [ChainId.FANTOM, FTM],\n  [ChainId.FANTOM, FTM],\n  [ChainId.SHIDEN, SDN],\n  [ChainId.SHIDEN, SDN],\n  [ChainId.IOTEX, IOTX],\n  [ChainId.HARMONY, ONE],\n  [ChainId.CRONOS, CRO],\n  [ChainId.OKEX, OKT],\n  [ChainId.MULTIVAC, MTV],\n  [ChainId.METIS_NETWORK, METIS],\n  [ChainId.MOONBEAM, GLMR],\n];\n\nexport const NETWORK_LABELS: { [chainId in ChainId]?: string } = {\n  [ChainId.RINKEBY]: 'Rinkeby',\n  [ChainId.ROPSTEN]: 'Ropsten',\n  [ChainId.GÃ–RLI]: 'GÃ¶rli',\n  [ChainId.KOVAN]: 'Kovan',\n  [ChainId.FUJI]: 'Avalanche',\n  [ChainId.AVALANCHE]: 'Avalanche',\n  [ChainId.SMART_CHAIN]: 'SmartChain',\n  [ChainId.SMART_CHAIN_TEST]: 'SmartChainTestnet',\n  [ChainId.MOONBASE_ALPHA]: 'Moonbase',\n  [ChainId.MUMBAI]: 'Mumbai',\n  [ChainId.MAINNET]: 'Ethereum',\n  [ChainId.MATIC]: 'Polygon',\n  [ChainId.HECO]: 'HECO',\n  [ChainId.MOONRIVER]: 'Moonriver',\n  [ChainId.FANTOM]: 'Fantom',\n  [ChainId.SHIDEN]: 'Shiden',\n  [ChainId.IOTEX]: 'IoTeX',\n  [ChainId.HARMONY]: 'Harmony',\n  [ChainId.CRONOS]: 'Cronos',\n  [ChainId.OKEX]: 'OKEx',\n  [ChainId.MULTIVAC]: 'MultiVAC',\n  [ChainId.METIS_NETWORK]: 'MetisNetwork',\n  [ChainId.MOONBEAM]: 'Moonbeam',\n}\n\nexport const NETWORK_SYMBOLS: any = {\n  Ethereum: 'ETH',\n  Rinkeby: 'ETH',\n  Ropsten: 'ETH',\n  GÃ¶rli: 'ETH',\n  Kovan: 'ETH',\n  Avalanche: 'AVAX',\n  SmartChain: 'BNB',\n  Moonbase: 'DEV',\n  Polygon: 'MATIC',\n  HECO: 'HT',\n  Moonriver: 'MOVR',\n  Fantom: 'FTM',\n  Shiden: 'SDN',\n  Iotex: 'IOTX',\n  Harmony: 'ONE',\n  Cronos: 'CRO',\n  OKEx: 'OKT',\n  MultiVAC: 'MTV',\n  MetisNetwork: 'METIS',\n  Moonbeam: 'GLMR',\n}","import { ChainId } from '../constants'\nimport { Currency } from './currency'\nimport invariant from 'tiny-invariant'\nimport { validateAndParseAddress } from '../utils'\n\n/**\n * Represents an ERC20 token with a unique address and some metadata.\n */\nexport class Token extends Currency {\n  public readonly chainId: ChainId\n  public readonly address: string\n  public readonly resourceId: string\n\n  public constructor(chainId: ChainId, address: string, decimals: number, symbol?: string, name?: string, resourceId?: string) {\n    super(decimals, symbol, name)\n    this.chainId = chainId\n    this.address = validateAndParseAddress(address)\n    this.resourceId = resourceId || ''\n  }\n\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\n   * @param other other token to compare\n   */\n  public equals(other: Token): boolean {\n    // short circuit on reference equality\n    if (this === other) {\n      return true\n    }\n    return this.chainId === other.chainId && this.address === other.address\n  }\n\n  /**\n  * Returns true if the two tokens are equivalent, i.e. have the same resourceId.\n  * @param other other token to compare\n  */\n  public equalsResourceId(other: Token): boolean {\n    // short circuit on reference equality\n    if (this === other) {\n      return true\n    }\n    return this.resourceId === other.resourceId\n  }\n\n  /**\n   * Returns true if the address of this token sorts before the address of the other token\n   * @param other other token to compare\n   * @throws if the tokens have the same address\n   * @throws if the tokens are on different chains\n   */\n  public sortsBefore(other: Token): boolean {\n    invariant(this.chainId === other.chainId, 'CHAIN_IDS')\n    invariant(this.address !== other.address, 'ADDRESSES')\n    return this.address.toLowerCase() < other.address.toLowerCase()\n  }\n}\n\n/**\n * Compares two currencies for equality\n */\nexport function currencyEquals(currencyA: Currency, currencyB: Currency): boolean {\n  if (currencyA instanceof Token && currencyB instanceof Token) {\n    return currencyA.equals(currencyB)\n  } else if (currencyA instanceof Token) {\n    return false\n  } else if (currencyB instanceof Token) {\n    return false\n  } else {\n    return currencyA === currencyB\n  }\n}\n\nexport const WETH = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2', 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0xc778417E063141139Fce010982780140Aa0cD5Ab', 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.GÃ–RLI]: new Token(ChainId.GÃ–RLI, '0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6', 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0xd0A1E359811322d97991E03f863a0C30C2cF029C', 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.FUJI]: new Token(ChainId.FUJI, '0x4e7a7ffc71Fb28b037f39b5f5cB8aF0bf5cF3B5C', 18, 'WAVAX', 'Wrapped AVAX'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', 18, 'WAVAX', 'Wrapped AVAX'),\n  [ChainId.SMART_CHAIN]: new Token(ChainId.SMART_CHAIN, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB'),\n  [ChainId.SMART_CHAIN_TEST]: new Token(ChainId.SMART_CHAIN_TEST, '0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd', 18, 'WBNB', 'Wrapped BNB'),\n  [ChainId.MOONBASE_ALPHA]: new Token(ChainId.MOONBASE_ALPHA, '0x15623F3b7219FB862dE760c212fFcD13d201c6c6', 18, 'WDEV', 'Wrapped DEV'),\n  [ChainId.MOONRIVER]: new Token(ChainId.MOONRIVER, '0x98878B06940aE243284CA214f92Bb71a2b032B8A', 18, 'WMOVR', 'Wrapped MOVR'),\n  [ChainId.MUMBAI]: new Token(ChainId.MUMBAI, '0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', 18, 'WMATIC', 'Wrapped MATIC'),\n  [ChainId.MATIC]: new Token(ChainId.MATIC, '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', 18, 'WMATIC', 'Wrapped MATIC in Mainnet'),\n  [ChainId.HECO]: new Token(ChainId.HECO, '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F', 18, 'WHT', 'Wrapped HECO in Mainnet'),\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, '0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83', 18, 'WFTM', ' Wrapped Fantom in Mainnet'),\n  [ChainId.SHIDEN]: new Token(ChainId.SHIDEN, '0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83', 18, 'WSDN', ' Wrapped Shiden in Mainnet'),\n  [ChainId.IOTEX]: new Token(ChainId.IOTEX, '0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83', 18, 'WIOTX', ' Wrapped Iotex in Mainnet'), // to do paste true address\n  [ChainId.HARMONY]: new Token(ChainId.HARMONY, '0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83', 18, 'WONE', ' Wrapped Harmony in Mainnet'),\n  [ChainId.CRONOS]: new Token(ChainId.CRONOS, '0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83', 18, 'WCRO', ' Wrapped Cronos in Mainnet'),\n  [ChainId.OKEX]: new Token(ChainId.OKEX, '0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83', 18, 'WOKT', ' Wrapped Okex in Mainnet'),\n  [ChainId.MULTIVAC]: new Token(ChainId.MULTIVAC, '0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83', 18, 'WMTV', ' Wrapped MTV in Mainnet'),\n  [ChainId.METIS_NETWORK]: new Token(ChainId.METIS_NETWORK, '0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83', 18, 'WMETIS', ' Wrapped METIS in Mainnet'),\n  [ChainId.MOONBEAM]: new Token(ChainId.MOONBEAM, '0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83', 18, 'WGLMR', ' Wrapped GLMR in Mainnet')\n}\n","import invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\nimport _Decimal from 'decimal.js-light'\nimport _Big, { RoundingMode } from 'big.js'\nimport toFormat from 'toformat'\n\nimport { BigintIsh, Rounding } from '../../constants'\nimport { ONE } from '../../constants'\nimport { parseBigintIsh } from '../../utils'\n\nconst Decimal = toFormat(_Decimal)\nconst Big = toFormat(_Big)\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP\n}\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: RoundingMode.RoundDown,\n  [Rounding.ROUND_HALF_UP]: RoundingMode.RoundHalfUp,\n  [Rounding.ROUND_UP]: RoundingMode.RoundUp\n}\n\nexport class Fraction {\n  public readonly numerator: JSBI\n  public readonly denominator: JSBI\n\n  public constructor(numerator: BigintIsh, denominator: BigintIsh = ONE) {\n    this.numerator = parseBigintIsh(numerator)\n    this.denominator = parseBigintIsh(denominator)\n  }\n\n  // performs floor division\n  public get quotient(): JSBI {\n    return JSBI.divide(this.numerator, this.denominator)\n  }\n\n  // remainder after floor division\n  public get remainder(): Fraction {\n    return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator)\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator)\n  }\n\n  public add(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.add(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public subtract(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.subtract(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public lessThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return JSBI.lessThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public equalTo(other: Fraction | BigintIsh): boolean {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return JSBI.equal(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public greaterThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return JSBI.greaterThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public multiply(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.numerator),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public divide(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(this.denominator, otherParsed.numerator)\n    )\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`)\n    invariant(significantDigits > 0, `${significantDigits} is not positive.`)\n\n    Decimal.set({ precision: significantDigits + 1, rounding: toSignificantRounding[rounding] })\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits)\n    return quotient.toFormat(quotient.decimalPlaces(), format)\n  }\n\n  public toFixed(\n    decimalPlaces: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`)\n    invariant(decimalPlaces >= 0, `${decimalPlaces} is negative.`)\n\n    Big.DP = decimalPlaces\n    Big.RM = toFixedRounding[rounding]\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format)\n  }\n}\n","import { AVAX, BNB, Currency, DEV, ETHER, HECO, MATIC, MOVR, FTM, SDN, IOTX, ONE, CRO, OKT, MTV, METIS, GLMR } from '../currency'\nimport { BigintIsh, ChainId, Rounding, SolidityType, TEN } from '../../constants'\nimport { parseBigintIsh, validateSolidityTypeInstance } from '../../utils'\n\nimport { Fraction } from './fraction'\nimport JSBI from 'jsbi'\nimport _Big from 'big.js'\nimport { currencyEquals } from '../token'\nimport invariant from 'tiny-invariant'\nimport toFormat from 'toformat'\n\nconst Big = toFormat(_Big)\n\nexport class CurrencyAmount extends Fraction {\n  public readonly currency: Currency\n\n  /**\n   * Helper that calls the constructor with the ETHER currency\n   * @param amount ether amount in wei\n   */\n  public static ether(amount: BigintIsh, chainId?: ChainId): CurrencyAmount {\n    let currency = ETHER;\n    if (chainId && chainId === ChainId.AVALANCHE || chainId === ChainId.FUJI) {\n      currency = AVAX;\n    }\n    if (chainId && chainId === ChainId.SMART_CHAIN || chainId === ChainId.SMART_CHAIN_TEST) {\n      currency = BNB;\n    }\n    if (chainId && chainId === ChainId.MOONBASE_ALPHA) {\n      currency = DEV;\n    }\n    if (chainId && chainId === ChainId.MUMBAI) {\n      currency = MATIC;\n    }\n    if (chainId && chainId === ChainId.MATIC) {\n      currency = MATIC;\n    }\n    if (chainId && chainId === ChainId.HECO) {\n      currency = HECO;\n    }\n    if (chainId && chainId === ChainId.MOONRIVER) {\n      currency = MOVR;\n    }\n    if (chainId && chainId === ChainId.FANTOM) {\n      currency = FTM;\n    }\n    if (chainId && chainId === ChainId.SHIDEN) {\n      currency = SDN;\n    }\n    if (chainId && chainId === ChainId.IOTEX) {\n      currency = IOTX;\n    }\n    if (chainId && chainId === ChainId.HARMONY) {\n      currency = ONE;\n    }\n    if (chainId && chainId === ChainId.CRONOS) {\n      currency = CRO;\n    }\n    if (chainId && chainId === ChainId.OKEX) {\n      currency = OKT;\n    }\n    if (chainId && chainId === ChainId.MULTIVAC) {\n      currency = MTV;\n    }\n    if (chainId && chainId === ChainId.METIS_NETWORK) {\n      currency = METIS;\n    }\n    if (chainId && chainId === ChainId.MOONBEAM) {\n      currency = GLMR;\n    }\n    return new CurrencyAmount(currency, amount)\n  }\n\n  // amount _must_ be raw, i.e. in the native representation\n  protected constructor(currency: Currency, amount: BigintIsh) {\n    const parsedAmount = parseBigintIsh(amount)\n    validateSolidityTypeInstance(parsedAmount, SolidityType.uint256)\n\n    super(parsedAmount, JSBI.exponentiate(TEN, JSBI.BigInt(currency?.decimals)))\n    this.currency = currency\n  }\n\n  public get raw(): JSBI {\n    return this.numerator\n  }\n\n  public add(other: CurrencyAmount): CurrencyAmount {\n    invariant(currencyEquals(this.currency, other.currency), 'TOKEN')\n    return new CurrencyAmount(this.currency, JSBI.add(this.raw, other.raw))\n  }\n\n  public subtract(other: CurrencyAmount): CurrencyAmount {\n    invariant(currencyEquals(this.currency, other.currency), 'TOKEN')\n    return new CurrencyAmount(this.currency, JSBI.subtract(this.raw, other.raw))\n  }\n\n  public toSignificant(\n    significantDigits: number = 6,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    return super.toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(\n    decimalPlaces: number = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    invariant(decimalPlaces <= this.currency.decimals, 'DECIMALS')\n    return super.toFixed(decimalPlaces, format, rounding)\n  }\n\n  public toExact(format: object = { groupSeparator: '' }): string {\n    Big.DP = this.currency.decimals\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(format)\n  }\n}\n","import { CurrencyAmount } from './currencyAmount'\nimport { Token } from '../token'\nimport invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\n\nimport { BigintIsh } from '../../constants'\n\nexport class TokenAmount extends CurrencyAmount {\n  public readonly token: Token\n\n  // amount _must_ be raw, i.e. in the native representation\n  public constructor(token: Token, amount: BigintIsh) {\n    super(token, amount)\n    this.token = token\n  }\n\n  public add(other: TokenAmount): TokenAmount {\n    invariant(this.token.equals(other.token), 'TOKEN')\n    return new TokenAmount(this.token, JSBI.add(this.raw, other.raw))\n  }\n\n  public subtract(other: TokenAmount): TokenAmount {\n    invariant(this.token.equals(other.token), 'TOKEN')\n    return new TokenAmount(this.token, JSBI.subtract(this.raw, other.raw))\n  }\n}\n","import { Token } from '../token'\nimport { TokenAmount } from './tokenAmount'\nimport { currencyEquals } from '../token'\nimport invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\n\nimport { BigintIsh, Rounding, TEN } from '../../constants'\nimport { Currency } from '../currency'\nimport { Route } from '../route'\nimport { Fraction } from './fraction'\nimport { CurrencyAmount } from './currencyAmount'\n\nexport class Price extends Fraction {\n  public readonly baseCurrency: Currency // input i.e. denominator\n  public readonly quoteCurrency: Currency // output i.e. numerator\n  public readonly scalar: Fraction // used to adjust the raw fraction w/r/t the decimals of the {base,quote}Token\n\n  public static fromRoute(route: Route): Price {\n    const prices: Price[] = []\n    for (const [i, pair] of route.pairs.entries()) {\n      prices.push(\n        route.path[i].equals(pair.token0)\n          ? new Price(pair.reserve0.currency, pair.reserve1.currency, pair.reserve0.raw, pair.reserve1.raw)\n          : new Price(pair.reserve1.currency, pair.reserve0.currency, pair.reserve1.raw, pair.reserve0.raw)\n      )\n    }\n    return prices.slice(1).reduce((accumulator, currentValue) => accumulator.multiply(currentValue), prices[0])\n  }\n\n  // denominator and numerator _must_ be raw, i.e. in the native representation\n  public constructor(baseCurrency: Currency, quoteCurrency: Currency, denominator: BigintIsh, numerator: BigintIsh) {\n    super(numerator, denominator)\n\n    this.baseCurrency = baseCurrency\n    this.quoteCurrency = quoteCurrency\n    this.scalar = new Fraction(\n      JSBI.exponentiate(TEN, JSBI.BigInt(baseCurrency.decimals)),\n      JSBI.exponentiate(TEN, JSBI.BigInt(quoteCurrency.decimals))\n    )\n  }\n\n  public get raw(): Fraction {\n    return new Fraction(this.numerator, this.denominator)\n  }\n\n  public get adjusted(): Fraction {\n    return super.multiply(this.scalar)\n  }\n\n  public invert(): Price {\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator)\n  }\n\n  public multiply(other: Price): Price {\n    invariant(currencyEquals(this.quoteCurrency, other.baseCurrency), 'TOKEN')\n    const fraction = super.multiply(other)\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator)\n  }\n\n  // performs floor division on overflow\n  public quote(currencyAmount: CurrencyAmount): CurrencyAmount {\n    invariant(currencyEquals(currencyAmount.currency, this.baseCurrency), 'TOKEN')\n    if (this.quoteCurrency instanceof Token) {\n      return new TokenAmount(this.quoteCurrency, super.multiply(currencyAmount.raw).quotient)\n    }\n    return CurrencyAmount.ether(super.multiply(currencyAmount.raw).quotient)\n  }\n\n  public toSignificant(significantDigits: number = 6, format?: object, rounding?: Rounding): string {\n    return this.adjusted.toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 4, format?: object, rounding?: Rounding): string {\n    return this.adjusted.toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import {\n  BigintIsh,\n  ChainId,\n  FACTORY_AND_INIT,\n  FIVE,\n  MINIMUM_LIQUIDITY,\n  ONE,\n  ZERO,\n  _1000,\n  _997\n} from '../constants'\nimport { InsufficientInputAmountError, InsufficientReservesError } from '../errors'\nimport { keccak256, pack } from '@ethersproject/solidity'\nimport { parseBigintIsh, sqrt } from '../utils'\n\nimport JSBI from 'jsbi'\nimport { Price } from './fractions/price'\nimport { Token } from './token'\nimport { TokenAmount } from './fractions/tokenAmount'\nimport { getCreate2Address } from '@ethersproject/address'\nimport invariant from 'tiny-invariant'\n\nlet PAIR_ADDRESS_CACHE: { [token0Address: string]: { [token1Address: string]: string } } = {\n  // hardcode BIOS/ETH pool for SushiSwap\n  '0xAACa86B876ca011844b5798ECA7a67591A9743C8': {\n    '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2': '0xE9a889E6963f122a98f8083d951c71329c726c0A',\n  },\n  // hardcode BNB/RELAY pool for PancakeSwap\n  '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c': {\n    '0xE338D4250A4d959F88Ff8789EaaE8c32700BD175': '0x1dE027DED494175C229c016A9697F85794006a59',\n  },\n  // hardcode AVAX/RELAY pool for Trader Joe\n  '0x78c42324016cd91D1827924711563fb66E33A83A': {\n    '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7': '0x41f3092d6Dd8dB25ec0f7395F56CAc107EcB7A12',\n  }\n};\n\nexport class Pair {\n  public readonly liquidityToken: Token\n  private readonly tokenAmounts: [TokenAmount, TokenAmount]\n\n  public static getAddress(tokenA: Token, tokenB: Token): string {\n    const tokens = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA] // does safety checks\n\n    if (PAIR_ADDRESS_CACHE ?.[tokens[0].address] ?.[tokens[1].address] === undefined) {\n      PAIR_ADDRESS_CACHE = {\n        ...PAIR_ADDRESS_CACHE,\n        [tokens[0].address]: {\n          ...PAIR_ADDRESS_CACHE ?.[tokens[0].address],\n          [tokens[1].address]: getCreate2Address(\n            FACTORY_AND_INIT[tokens[0] ?.chainId] ?.factoryAddress,\n            keccak256(['bytes'], [pack(['address', 'address'], [tokens[0].address, tokens[1].address])]),\n            FACTORY_AND_INIT[tokens[0] ?.chainId] ?.initCodeHash,\n          )\n        }\n      }\n    }\n\n    return PAIR_ADDRESS_CACHE[tokens[0].address][tokens[1].address]\n  }\n\n  public constructor(tokenAmountA: TokenAmount, tokenAmountB: TokenAmount) {\n    const tokenAmounts = tokenAmountA.token.sortsBefore(tokenAmountB.token) // does safety checks\n      ? [tokenAmountA, tokenAmountB]\n      : [tokenAmountB, tokenAmountA]\n    this.liquidityToken = new Token(\n      tokenAmounts[0].token.chainId,\n      Pair.getAddress(tokenAmounts[0].token, tokenAmounts[1].token),\n      18,\n      'ZERO-LP',\n      'ZERO-LP-Token'\n    )\n    this.tokenAmounts = tokenAmounts as [TokenAmount, TokenAmount]\n  }\n\n  /**\n   * Returns true if the token is either token0 or token1\n   * @param token to check\n   */\n  public involvesToken(token: Token): boolean {\n    return token.equals(this.token0) || token.equals(this.token1)\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token0, i.e. the ratio of reserve1 to reserve0\n   */\n  public get token0Price(): Price {\n    return new Price(this.token0, this.token1, this.tokenAmounts[0].raw, this.tokenAmounts[1].raw)\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token1, i.e. the ratio of reserve0 to reserve1\n   */\n  public get token1Price(): Price {\n    return new Price(this.token1, this.token0, this.tokenAmounts[1].raw, this.tokenAmounts[0].raw)\n  }\n\n  /**\n   * Return the price of the given token in terms of the other token in the pair.\n   * @param token token to return price of\n   */\n  public priceOf(token: Token): Price {\n    invariant(this.involvesToken(token), 'TOKEN')\n    return token.equals(this.token0) ? this.token0Price : this.token1Price\n  }\n\n  /**\n   * Returns the chain ID of the tokens in the pair.\n   */\n  public get chainId(): ChainId {\n    return this.token0.chainId\n  }\n\n  public get token0(): Token {\n    return this.tokenAmounts[0].token\n  }\n\n  public get token1(): Token {\n    return this.tokenAmounts[1].token\n  }\n\n  public get reserve0(): TokenAmount {\n    return this.tokenAmounts[0]\n  }\n\n  public get reserve1(): TokenAmount {\n    return this.tokenAmounts[1]\n  }\n\n  public reserveOf(token: Token): TokenAmount {\n    invariant(this.involvesToken(token), 'TOKEN')\n    return token.equals(this.token0) ? this.reserve0 : this.reserve1\n  }\n\n  public getOutputAmount(inputAmount: TokenAmount): [TokenAmount, Pair] {\n    invariant(this.involvesToken(inputAmount.token), 'TOKEN')\n    if (JSBI.equal(this.reserve0.raw, ZERO) || JSBI.equal(this.reserve1.raw, ZERO)) {\n      throw new InsufficientReservesError()\n    }\n    const inputReserve = this.reserveOf(inputAmount.token)\n    const outputReserve = this.reserveOf(inputAmount.token.equals(this.token0) ? this.token1 : this.token0)\n    const inputAmountWithFee = JSBI.multiply(inputAmount.raw, _997)\n    const numerator = JSBI.multiply(inputAmountWithFee, outputReserve.raw)\n    const denominator = JSBI.add(JSBI.multiply(inputReserve.raw, _1000), inputAmountWithFee)\n    const outputAmount = new TokenAmount(\n      inputAmount.token.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.divide(numerator, denominator)\n    )\n    if (JSBI.equal(outputAmount.raw, ZERO)) {\n      throw new InsufficientInputAmountError()\n    }\n    return [outputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\n  }\n\n  public getInputAmount(outputAmount: TokenAmount): [TokenAmount, Pair] {\n    invariant(this.involvesToken(outputAmount.token), 'TOKEN')\n    if (\n      JSBI.equal(this.reserve0.raw, ZERO) ||\n      JSBI.equal(this.reserve1.raw, ZERO) ||\n      JSBI.greaterThanOrEqual(outputAmount.raw, this.reserveOf(outputAmount.token).raw)\n    ) {\n      throw new InsufficientReservesError()\n    }\n\n    const outputReserve = this.reserveOf(outputAmount.token)\n    const inputReserve = this.reserveOf(outputAmount.token.equals(this.token0) ? this.token1 : this.token0)\n    const numerator = JSBI.multiply(JSBI.multiply(inputReserve.raw, outputAmount.raw), _1000)\n    const denominator = JSBI.multiply(JSBI.subtract(outputReserve.raw, outputAmount.raw), _997)\n    const inputAmount = new TokenAmount(\n      outputAmount.token.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.add(JSBI.divide(numerator, denominator), ONE)\n    )\n    return [inputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\n  }\n\n  public getLiquidityMinted(\n    totalSupply: TokenAmount,\n    tokenAmountA: TokenAmount,\n    tokenAmountB: TokenAmount\n  ): TokenAmount {\n    invariant(totalSupply.token.equals(this.liquidityToken), 'LIQUIDITY')\n    const tokenAmounts = tokenAmountA.token.sortsBefore(tokenAmountB.token) // does safety checks\n      ? [tokenAmountA, tokenAmountB]\n      : [tokenAmountB, tokenAmountA]\n    invariant(tokenAmounts[0].token.equals(this.token0) && tokenAmounts[1].token.equals(this.token1), 'TOKEN')\n\n    let liquidity: JSBI\n    if (JSBI.equal(totalSupply.raw, ZERO)) {\n      liquidity = JSBI.subtract(sqrt(JSBI.multiply(tokenAmounts[0].raw, tokenAmounts[1].raw)), MINIMUM_LIQUIDITY)\n    } else {\n      const amount0 = JSBI.divide(JSBI.multiply(tokenAmounts[0].raw, totalSupply.raw), this.reserve0.raw)\n      const amount1 = JSBI.divide(JSBI.multiply(tokenAmounts[1].raw, totalSupply.raw), this.reserve1.raw)\n      liquidity = JSBI.lessThanOrEqual(amount0, amount1) ? amount0 : amount1\n    }\n    if (!JSBI.greaterThan(liquidity, ZERO)) {\n      throw new InsufficientInputAmountError()\n    }\n    return new TokenAmount(this.liquidityToken, liquidity)\n  }\n\n  public getLiquidityValue(\n    token: Token,\n    totalSupply: TokenAmount,\n    liquidity: TokenAmount,\n    feeOn: boolean = false,\n    kLast?: BigintIsh\n  ): TokenAmount {\n    invariant(this.involvesToken(token), 'TOKEN')\n    invariant(totalSupply.token.equals(this.liquidityToken), 'TOTAL_SUPPLY')\n    invariant(liquidity.token.equals(this.liquidityToken), 'LIQUIDITY')\n    invariant(JSBI.lessThanOrEqual(liquidity.raw, totalSupply.raw), 'LIQUIDITY')\n\n    let totalSupplyAdjusted: TokenAmount\n    if (!feeOn) {\n      totalSupplyAdjusted = totalSupply\n    } else {\n      invariant(!!kLast, 'K_LAST')\n      const kLastParsed = parseBigintIsh(kLast)\n      if (!JSBI.equal(kLastParsed, ZERO)) {\n        const rootK = sqrt(JSBI.multiply(this.reserve0.raw, this.reserve1.raw))\n        const rootKLast = sqrt(kLastParsed)\n        if (JSBI.greaterThan(rootK, rootKLast)) {\n          const numerator = JSBI.multiply(totalSupply.raw, JSBI.subtract(rootK, rootKLast))\n          const denominator = JSBI.add(JSBI.multiply(rootK, FIVE), rootKLast)\n          const feeLiquidity = JSBI.divide(numerator, denominator)\n          totalSupplyAdjusted = totalSupply.add(new TokenAmount(this.liquidityToken, feeLiquidity))\n        } else {\n          totalSupplyAdjusted = totalSupply\n        }\n      } else {\n        totalSupplyAdjusted = totalSupply\n      }\n    }\n\n    return new TokenAmount(\n      token,\n      JSBI.divide(JSBI.multiply(liquidity.raw, this.reserveOf(token).raw), totalSupplyAdjusted.raw)\n    )\n  }\n}\n","import { ChainId } from '../constants'\nimport invariant from 'tiny-invariant'\n\nimport {Currency, ETHER_CURRENCIES} from './currency'\nimport { Token, WETH } from './token'\nimport { Pair } from './pair'\nimport { Price } from './fractions/price'\n\nexport class Route {\n  public readonly pairs: Pair[]\n  public readonly path: Token[]\n  public readonly input: Currency\n  public readonly output: Currency\n  public readonly midPrice: Price\n\n  public constructor(pairs: Pair[], input: Currency, output?: Currency) {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(\n      pairs.every(pair => pair.chainId === pairs[0].chainId),\n      'CHAIN_IDS'\n    )\n    invariant(\n      (input instanceof Token && pairs[0].involvesToken(input)) ||\n        (ETHER_CURRENCIES.includes(input) && pairs[0].involvesToken(WETH[pairs[0].chainId])),\n      'INPUT'\n    )\n    invariant(\n      typeof output === 'undefined' ||\n        (output instanceof Token && pairs[pairs.length - 1].involvesToken(output)) ||\n        (ETHER_CURRENCIES.includes(output) && pairs[pairs.length - 1].involvesToken(WETH[pairs[0].chainId])),\n      'OUTPUT'\n    )\n\n    const path: Token[] = [input instanceof Token ? input : WETH[pairs[0].chainId]]\n    for (const [i, pair] of pairs.entries()) {\n      const currentInput = path[i]\n      invariant(currentInput.equals(pair.token0) || currentInput.equals(pair.token1), 'PATH')\n      const output = currentInput.equals(pair.token0) ? pair.token1 : pair.token0\n      path.push(output)\n    }\n\n    this.pairs = pairs\n    this.path = path\n    this.midPrice = Price.fromRoute(this)\n    this.input = input\n    this.output = output ?? path[path.length - 1]\n  }\n\n  public get chainId(): ChainId {\n    return this.pairs[0].chainId\n  }\n}\n","import { Rounding, _100 } from '../../constants'\nimport { Fraction } from './fraction'\n\nconst _100_PERCENT = new Fraction(_100)\n\nexport class Percent extends Fraction {\n  public toSignificant(significantDigits: number = 5, format?: object, rounding?: Rounding): string {\n    return this.multiply(_100_PERCENT).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 2, format?: object, rounding?: Rounding): string {\n    return this.multiply(_100_PERCENT).toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import { Currency, ETHER_CURRENCIES } from './currency'\nimport { ChainId, ONE, TradeType, ZERO } from '../constants'\nimport { Token, WETH, currencyEquals } from './token'\n\nimport { CurrencyAmount } from './fractions/currencyAmount'\nimport { Fraction } from './fractions/fraction'\nimport { Pair } from './pair'\nimport { Percent } from './fractions/percent'\nimport { Price } from './fractions/price'\nimport { Route } from './route'\nimport { TokenAmount } from './fractions/tokenAmount'\nimport invariant from 'tiny-invariant'\nimport { sortedInsert } from '../utils'\n\n/**\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\n * @param midPrice mid price before the trade\n * @param inputAmount the input amount of the trade\n * @param outputAmount the output amount of the trade\n */\nfunction computePriceImpact(midPrice: Price, inputAmount: CurrencyAmount, outputAmount: CurrencyAmount): Percent {\n  const exactQuote = midPrice.raw.multiply(inputAmount.raw)\n  // calculate slippage := (exactQuote - outputAmount) / exactQuote\n  const slippage = exactQuote.subtract(outputAmount.raw).divide(exactQuote)\n  return new Percent(slippage.numerator, slippage.denominator)\n}\n\n// minimal interface so the input output comparator may be shared across types\ninterface InputOutput {\n  readonly inputAmount: CurrencyAmount\n  readonly outputAmount: CurrencyAmount\n}\n\n// comparator function that allows sorting trades by their output amounts, in decreasing order, and then input amounts\n// in increasing order. i.e. the best trades have the most outputs for the least inputs and are sorted first\nexport function inputOutputComparator(a: InputOutput, b: InputOutput): number {\n  // must have same input and output token for comparison\n  invariant(currencyEquals(a.inputAmount.currency, b.inputAmount.currency), 'INPUT_CURRENCY')\n  invariant(currencyEquals(a.outputAmount.currency, b.outputAmount.currency), 'OUTPUT_CURRENCY')\n  if (a.outputAmount.equalTo(b.outputAmount)) {\n    if (a.inputAmount.equalTo(b.inputAmount)) {\n      return 0\n    }\n    // trade A requires less input than trade B, so A should come first\n    if (a.inputAmount.lessThan(b.inputAmount)) {\n      return -1\n    } else {\n      return 1\n    }\n  } else {\n    // tradeA has less output than trade B, so should come second\n    if (a.outputAmount.lessThan(b.outputAmount)) {\n      return 1\n    } else {\n      return -1\n    }\n  }\n}\n\n// extension of the input output comparator that also considers other dimensions of the trade in ranking them\nexport function tradeComparator(a: Trade, b: Trade) {\n  const ioComp = inputOutputComparator(a, b)\n  if (ioComp !== 0) {\n    return ioComp\n  }\n\n  // consider lowest slippage next, since these are less likely to fail\n  if (a.priceImpact.lessThan(b.priceImpact)) {\n    return -1\n  } else if (a.priceImpact.greaterThan(b.priceImpact)) {\n    return 1\n  }\n\n  // finally consider the number of hops since each hop costs gas\n  return a.route.path.length - b.route.path.length\n}\n\nexport interface BestTradeOptions {\n  // how many results to return\n  maxNumResults?: number\n  // the maximum number of hops a trade should contain\n  maxHops?: number\n}\n\n/**\n * Given a currency amount and a chain ID, returns the equivalent representation as the token amount.\n * In other words, if the currency is ETHER, returns the WETH token amount for the given chain. Otherwise, returns\n * the input currency amount.\n */\nfunction wrappedAmount(currencyAmount: CurrencyAmount, chainId: ChainId): TokenAmount {\n  if (currencyAmount instanceof TokenAmount) return currencyAmount\n  if (ETHER_CURRENCIES.includes(currencyAmount.currency)) {\n    return new TokenAmount(WETH[chainId], currencyAmount.raw)\n  }\n  invariant(false, 'CURRENCY')\n}\n\nfunction wrappedCurrency(currency: Currency, chainId: ChainId): Token {\n  if (currency instanceof Token) return currency\n  if (ETHER_CURRENCIES.includes(currency)) {\n    return WETH[chainId];\n  }\n  invariant(false, 'CURRENCY')\n}\n\n/**\n * Represents a trade executed against a list of pairs.\n * Does not account for slippage, i.e. trades that front run this trade and move the price.\n */\nexport class Trade {\n  /**\n   * The route of the trade, i.e. which pairs the trade goes through.\n   */\n  public readonly route: Route\n  /**\n   * The type of the trade, either exact in or exact out.\n   */\n  public readonly tradeType: TradeType\n  /**\n   * The input amount for the trade assuming no slippage.\n   */\n  public readonly inputAmount: CurrencyAmount\n  /**\n   * The output amount for the trade assuming no slippage.\n   */\n  public readonly outputAmount: CurrencyAmount\n  /**\n   * The price expressed in terms of output amount/input amount.\n   */\n  public readonly executionPrice: Price\n  /**\n   * The mid price after the trade executes assuming no slippage.\n   */\n  public readonly nextMidPrice: Price\n  /**\n   * The percent difference between the mid price before the trade and the trade execution price.\n   */\n  public readonly priceImpact: Percent\n\n  /**\n   * Constructs an exact in trade with the given amount in and route\n   * @param route route of the exact in trade\n   * @param amountIn the amount being passed in\n   */\n  public static exactIn(route: Route, amountIn: CurrencyAmount): Trade {\n    return new Trade(route, amountIn, TradeType.EXACT_INPUT)\n  }\n\n  /**\n   * Constructs an exact out trade with the given amount out and route\n   * @param route route of the exact out trade\n   * @param amountOut the amount returned by the trade\n   */\n  public static exactOut(route: Route, amountOut: CurrencyAmount): Trade {\n    return new Trade(route, amountOut, TradeType.EXACT_OUTPUT)\n  }\n\n  public constructor(route: Route, amount: CurrencyAmount, tradeType: TradeType) {\n    const amounts: TokenAmount[] = new Array(route.path.length)\n    const nextPairs: Pair[] = new Array(route.pairs.length)\n    if (tradeType === TradeType.EXACT_INPUT) {\n      invariant(currencyEquals(amount.currency, route.input), 'INPUT')\n      amounts[0] = wrappedAmount(amount, route.chainId)\n      for (let i = 0; i < route.path.length - 1; i++) {\n        const pair = route.pairs[i]\n        const [outputAmount, nextPair] = pair.getOutputAmount(amounts[i])\n        amounts[i + 1] = outputAmount\n        nextPairs[i] = nextPair\n      }\n    } else {\n      invariant(currencyEquals(amount.currency, route.output), 'OUTPUT')\n      amounts[amounts.length - 1] = wrappedAmount(amount, route.chainId)\n      for (let i = route.path.length - 1; i > 0; i--) {\n        const pair = route.pairs[i - 1]\n        const [inputAmount, nextPair] = pair.getInputAmount(amounts[i])\n        amounts[i - 1] = inputAmount\n        nextPairs[i - 1] = nextPair\n      }\n    }\n\n    this.route = route\n    this.tradeType = tradeType\n    this.inputAmount =\n      tradeType === TradeType.EXACT_INPUT\n        ? amount\n        : ETHER_CURRENCIES.includes(route.input)\n          ? CurrencyAmount.ether(amounts[0].raw, route.chainId)\n          : amounts[0]\n    this.outputAmount =\n      tradeType === TradeType.EXACT_OUTPUT\n        ? amount\n        : ETHER_CURRENCIES.includes(route.output)\n          ? CurrencyAmount.ether(amounts[amounts.length - 1].raw, route.chainId)\n          : amounts[amounts.length - 1]\n    this.executionPrice = new Price(\n      this.inputAmount.currency,\n      this.outputAmount.currency,\n      this.inputAmount.raw,\n      this.outputAmount.raw\n    )\n    this.nextMidPrice = Price.fromRoute(new Route(nextPairs, route.input))\n    this.priceImpact = computePriceImpact(route.midPrice, this.inputAmount, this.outputAmount)\n  }\n\n  /**\n   * Get the minimum amount that must be received from this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public minimumAmountOut(slippageTolerance: Percent): CurrencyAmount {\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n    if (this.tradeType === TradeType.EXACT_OUTPUT) {\n      return this.outputAmount\n    } else {\n      const slippageAdjustedAmountOut = new Fraction(ONE)\n        .add(slippageTolerance)\n        .invert()\n        .multiply(this.outputAmount.raw).quotient\n      return this.outputAmount instanceof TokenAmount\n        ? new TokenAmount(this.outputAmount.token, slippageAdjustedAmountOut)\n        : CurrencyAmount.ether(slippageAdjustedAmountOut, this.route.chainId)\n    }\n  }\n\n  /**\n   * Get the maximum amount in that can be spent via this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public maximumAmountIn(slippageTolerance: Percent): CurrencyAmount {\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n    if (this.tradeType === TradeType.EXACT_INPUT) {\n      return this.inputAmount\n    } else {\n      const slippageAdjustedAmountIn = new Fraction(ONE).add(slippageTolerance).multiply(this.inputAmount.raw).quotient\n      return this.inputAmount instanceof TokenAmount\n        ? new TokenAmount(this.inputAmount.token, slippageAdjustedAmountIn)\n        : CurrencyAmount.ether(slippageAdjustedAmountIn, this.route.chainId)\n    }\n  }\n\n  /**\n   * Given a list of pairs, and a fixed amount in, returns the top `maxNumResults` trades that go from an input token\n   * amount to an output token, making at most `maxHops` hops.\n   * Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param currencyAmountIn exact amount of input currency to spend\n   * @param currencyOut the desired currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param originalAmountIn used in recursion; the original value of the currencyAmountIn parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  public static bestTradeExactIn(\n    pairs: Pair[],\n    currencyAmountIn: CurrencyAmount,\n    currencyOut: Currency,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n    // used in recursion.\n    currentPairs: Pair[] = [],\n    originalAmountIn: CurrencyAmount = currencyAmountIn,\n    bestTrades: Trade[] = []\n  ): Trade[] {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(maxHops > 0, 'MAX_HOPS')\n    invariant(originalAmountIn === currencyAmountIn || currentPairs.length > 0, 'INVALID_RECURSION')\n    const chainId: ChainId | undefined =\n      currencyAmountIn instanceof TokenAmount\n        ? currencyAmountIn.token.chainId\n        : currencyOut instanceof Token\n          ? currencyOut.chainId\n          : undefined\n    invariant(chainId !== undefined, 'CHAIN_ID')\n\n    const amountIn = wrappedAmount(currencyAmountIn, chainId)\n    const tokenOut = wrappedCurrency(currencyOut, chainId)\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i]\n      // pair irrelevant\n      if (!pair.token0.equals(amountIn.token) && !pair.token1.equals(amountIn.token)) continue\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\n\n      let amountOut: TokenAmount\n      try {\n        ;[amountOut] = pair.getOutputAmount(amountIn)\n      } catch (error) {\n        // input too low\n        if (error.isInsufficientInputAmountError) {\n          continue\n        }\n        throw error\n      }\n      // we have arrived at the output token, so this is the final trade of one of the paths\n      if (amountOut.token.equals(tokenOut)) {\n        sortedInsert(\n          bestTrades,\n          new Trade(\n            new Route([...currentPairs, pair], originalAmountIn.currency, currencyOut),\n            originalAmountIn,\n            TradeType.EXACT_INPUT\n          ),\n          maxNumResults,\n          tradeComparator\n        )\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\n\n        // otherwise, consider all the other paths that lead from this token as long as we have not exceeded maxHops\n        Trade.bestTradeExactIn(\n          pairsExcludingThisPair,\n          amountOut,\n          currencyOut,\n          {\n            maxNumResults,\n            maxHops: maxHops - 1\n          },\n          [...currentPairs, pair],\n          originalAmountIn,\n          bestTrades\n        )\n      }\n    }\n\n    return bestTrades\n  }\n\n  /**\n   * similar to the above method but instead targets a fixed output amount\n   * given a list of pairs, and a fixed amount out, returns the top `maxNumResults` trades that go from an input token\n   * to an output token amount, making at most `maxHops` hops\n   * note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param currencyIn the currency to spend\n   * @param currencyAmountOut the exact amount of currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param originalAmountOut used in recursion; the original value of the currencyAmountOut parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  public static bestTradeExactOut(\n    pairs: Pair[],\n    currencyIn: Currency,\n    currencyAmountOut: CurrencyAmount,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n    // used in recursion.\n    currentPairs: Pair[] = [],\n    originalAmountOut: CurrencyAmount = currencyAmountOut,\n    bestTrades: Trade[] = []\n  ): Trade[] {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(maxHops > 0, 'MAX_HOPS')\n    invariant(originalAmountOut === currencyAmountOut || currentPairs.length > 0, 'INVALID_RECURSION')\n    const chainId: ChainId | undefined =\n      currencyAmountOut instanceof TokenAmount\n        ? currencyAmountOut.token.chainId\n        : currencyIn instanceof Token\n          ? currencyIn.chainId\n          : undefined\n    invariant(chainId !== undefined, 'CHAIN_ID')\n\n    const amountOut = wrappedAmount(currencyAmountOut, chainId)\n    const tokenIn = wrappedCurrency(currencyIn, chainId)\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i]\n      // pair irrelevant\n      if (!pair.token0.equals(amountOut.token) && !pair.token1.equals(amountOut.token)) continue\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\n\n      let amountIn: TokenAmount\n      try {\n        ;[amountIn] = pair.getInputAmount(amountOut)\n      } catch (error) {\n        // not enough liquidity in this pair\n        if (error.isInsufficientReservesError) {\n          continue\n        }\n        throw error\n      }\n      // we have arrived at the input token, so this is the first trade of one of the paths\n      if (amountIn.token.equals(tokenIn)) {\n        sortedInsert(\n          bestTrades,\n          new Trade(\n            new Route([pair, ...currentPairs], currencyIn, originalAmountOut.currency),\n            originalAmountOut,\n            TradeType.EXACT_OUTPUT\n          ),\n          maxNumResults,\n          tradeComparator\n        )\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\n\n        // otherwise, consider all the other paths that arrive at this token as long as we have not exceeded maxHops\n        Trade.bestTradeExactOut(\n          pairsExcludingThisPair,\n          currencyIn,\n          amountIn,\n          {\n            maxNumResults,\n            maxHops: maxHops - 1\n          },\n          [pair, ...currentPairs],\n          originalAmountOut,\n          bestTrades\n        )\n      }\n    }\n\n    return bestTrades\n  }\n}\n","import { TradeType } from './constants'\nimport invariant from 'tiny-invariant'\nimport { validateAndParseAddress } from './utils'\nimport {CurrencyAmount, Percent, Trade, ETHER_CURRENCIES} from './entities'\n\n/**\n * Options for producing the arguments to send call to the router.\n */\nexport interface TradeOptions {\n  /**\n   * How much the execution price is allowed to move unfavorably from the trade execution price.\n   */\n  allowedSlippage: Percent\n  /**\n   * How long the swap is valid until it expires, in seconds.\n   * This will be used to produce a `deadline` parameter which is computed from when the swap call parameters\n   * are generated.\n   */\n  ttl: number\n  /**\n   * The account that should receive the output of the swap.\n   */\n  recipient: string\n\n  /**\n   * Whether any of the tokens in the path are fee on transfer tokens, which should be handled with special methods\n   */\n  feeOnTransfer?: boolean\n}\n\nexport interface TradeOptionsDeadline extends Omit<TradeOptions, 'ttl'> {\n  /**\n   * When the transaction expires.\n   * This is an atlernate to specifying the ttl, for when you do not want to use local time.\n   */\n  deadline: number\n}\n\n/**\n * The parameters to use in the call to the Uniswap V2 Router to execute a trade.\n */\nexport interface SwapParameters {\n  /**\n   * The method to call on the Uniswap V2 Router.\n   */\n  methodName: string\n  /**\n   * The arguments to pass to the method, all hex encoded.\n   */\n  args: (string | string[])[]\n  /**\n   * The amount of wei to send in hex.\n   */\n  value: string\n}\n\nfunction toHex(currencyAmount: CurrencyAmount) {\n  return `0x${currencyAmount.raw.toString(16)}`\n}\n\nconst ZERO_HEX = '0x0'\n\n/**\n * Represents the Uniswap V2 Router, and has static methods for helping execute trades.\n */\nexport abstract class Router {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {}\n  /**\n   * Produces the on-chain method name to call and the hex encoded parameters to pass as arguments for a given trade.\n   * @param trade to produce call parameters for\n   * @param options options for the call parameters\n   */\n  public static swapCallParameters(trade: Trade, options: TradeOptions | TradeOptionsDeadline): SwapParameters {\n    const etherIn = ETHER_CURRENCIES.includes(trade.inputAmount.currency);\n    const etherOut = ETHER_CURRENCIES.includes(trade.outputAmount.currency);\n    // the router does not support both ether in and out\n    invariant(!(etherIn && etherOut), 'ETHER_IN_OUT')\n    invariant(!('ttl' in options) || options.ttl > 0, 'TTL')\n\n    const to: string = validateAndParseAddress(options.recipient)\n    const amountIn: string = toHex(trade.maximumAmountIn(options.allowedSlippage))\n    const amountOut: string = toHex(trade.minimumAmountOut(options.allowedSlippage))\n    const path: string[] = trade.route.path.map(token => token.address)\n    const deadline =\n      'ttl' in options\n        ? `0x${(Math.floor(new Date().getTime() / 1000) + options.ttl).toString(16)}`\n        : `0x${options.deadline.toString(16)}`\n\n    const useFeeOnTransfer = Boolean(options.feeOnTransfer)\n\n    let methodName: string\n    let args: (string | string[])[]\n    let value: string\n    switch (trade.tradeType) {\n      case TradeType.EXACT_INPUT:\n        if (etherIn) {\n          methodName = useFeeOnTransfer ? 'swapExactETHForTokensSupportingFeeOnTransferTokens' : 'swapExactETHForTokens'\n          // (uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountOut, path, to, deadline]\n          value = amountIn\n        } else if (etherOut) {\n          methodName = useFeeOnTransfer ? 'swapExactTokensForETHSupportingFeeOnTransferTokens' : 'swapExactTokensForETH'\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountIn, amountOut, path, to, deadline]\n          value = ZERO_HEX\n        } else {\n          methodName = useFeeOnTransfer\n            ? 'swapExactTokensForTokensSupportingFeeOnTransferTokens'\n            : 'swapExactTokensForTokens'\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountIn, amountOut, path, to, deadline]\n          value = ZERO_HEX\n        }\n        break\n      case TradeType.EXACT_OUTPUT:\n        invariant(!useFeeOnTransfer, 'EXACT_OUT_FOT')\n        if (etherIn) {\n          methodName = 'swapETHForExactTokens'\n          // (uint amountOut, address[] calldata path, address to, uint deadline)\n          args = [amountOut, path, to, deadline]\n          value = amountIn\n        } else if (etherOut) {\n          methodName = 'swapTokensForExactETH'\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n          args = [amountOut, amountIn, path, to, deadline]\n          value = ZERO_HEX\n        } else {\n          methodName = 'swapTokensForExactTokens'\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n          args = [amountOut, amountIn, path, to, deadline]\n          value = ZERO_HEX\n        }\n        break\n    }\n    return {\n      methodName,\n      args,\n      value\n    }\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getNetwork } from '@ethersproject/networks'\nimport { getDefaultProvider } from '@ethersproject/providers'\nimport { TokenAmount } from './entities/fractions/tokenAmount'\nimport { Pair } from './entities/pair'\nimport IUniswapV2Pair from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport invariant from 'tiny-invariant'\nimport ERC20 from './abis/ERC20.json'\nimport { ChainId } from './constants'\nimport { Token } from './entities/token'\n\nlet TOKEN_DECIMALS_CACHE: { [chainId: number]: { [address: string]: number } } = {\n  [ChainId.MAINNET]: {\n    '0xE0B7927c4aF23765Cb51314A0E0521A9645F0E2A': 9 // DGD\n  }\n}\n\n/**\n * Contains methods for constructing instances of pairs and tokens from on-chain data.\n */\nexport abstract class Fetcher {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {}\n\n  /**\n   * Fetch information for a given token on the given chain, using the given ethers provider.\n   * @param chainId chain of the token\n   * @param address address of the token on the chain\n   * @param provider provider used to fetch the token\n   * @param symbol optional symbol of the token\n   * @param name optional name of the token\n   */\n  public static async fetchTokenData(\n    chainId: ChainId,\n    address: string,\n    provider = getDefaultProvider(getNetwork(chainId)),\n    symbol?: string,\n    name?: string\n  ): Promise<Token> {\n    const parsedDecimals =\n      typeof TOKEN_DECIMALS_CACHE?.[chainId]?.[address] === 'number'\n        ? TOKEN_DECIMALS_CACHE[chainId][address]\n        : await new Contract(address, ERC20, provider).decimals().then((decimals: number): number => {\n            TOKEN_DECIMALS_CACHE = {\n              ...TOKEN_DECIMALS_CACHE,\n              [chainId]: {\n                ...TOKEN_DECIMALS_CACHE?.[chainId],\n                [address]: decimals\n              }\n            }\n            return decimals\n          })\n    return new Token(chainId, address, parsedDecimals, symbol, name)\n  }\n\n  /**\n   * Fetches information about a pair and constructs a pair from the given two tokens.\n   * @param tokenA first token\n   * @param tokenB second token\n   * @param provider the provider to use to fetch the data\n   */\n  public static async fetchPairData(\n    tokenA: Token,\n    tokenB: Token,\n    provider = getDefaultProvider(getNetwork(tokenA.chainId))\n  ): Promise<Pair> {\n    invariant(tokenA.chainId === tokenB.chainId, 'CHAIN_ID')\n    const address = Pair.getAddress(tokenA, tokenB)\n    const [reserves0, reserves1] = await new Contract(address, IUniswapV2Pair.abi, provider).getReserves()\n    const balances = tokenA.sortsBefore(tokenB) ? [reserves0, reserves1] : [reserves1, reserves0]\n    return new Pair(new TokenAmount(tokenA, balances[0]), new TokenAmount(tokenB, balances[1]))\n  }\n}\n"],"names":["ChainId","ETHERSCAN_PREFIXES","TradeType","Rounding","FACTORY_ADDRESS","INIT_CODE_HASH","FACTORY_AND_INIT","MAINNET","factoryAddress","initCodeHash","RINKEBY","AVALANCHE","FUJI","SMART_CHAIN","SMART_CHAIN_TEST","MOONBASE_ALPHA","MUMBAI","MATIC","HECO","MINIMUM_LIQUIDITY","JSBI","BigInt","ZERO","ONE","TWO","THREE","FIVE","TEN","_100","_997","_1000","SolidityType","SOLIDITY_TYPE_MAXIMA","uint8","uint256","CAN_SET_PROTOTYPE","Object","InsufficientReservesError","name","constructor","setPrototypeOf","prototype","Error","InsufficientInputAmountError","validateSolidityTypeInstance","value","solidityType","greaterThanOrEqual","invariant","lessThanOrEqual","validateAndParseAddress","address","checksummedAddress","getAddress","warning","error","parseBigintIsh","bigintIsh","toString","sqrt","y","z","x","greaterThan","add","divide","lessThan","notEqual","sortedInsert","items","maxSize","comparator","length","push","isFull","lo","hi","mid","splice","pop","Currency","decimals","symbol","ETHER","AVAX","BNB","DEV","MOVR","FTM","SDN","IOTX","CRO","OKT","MTV","METIS","GLMR","ETHER_CURRENCIES","ETHER_NAMES_CURRENCIES","CHAIN_IDS_AND_CURRENCIES","ROPSTEN","GÃ–RLI","KOVAN","MOONRIVER","FANTOM","SHIDEN","IOTEX","HARMONY","CRONOS","OKEX","MULTIVAC","METIS_NETWORK","MOONBEAM","NETWORK_LABELS","NETWORK_SYMBOLS","Ethereum","Rinkeby","Ropsten","GÃ¶rli","Kovan","Avalanche","SmartChain","Moonbase","Polygon","Moonriver","Fantom","Shiden","Iotex","Harmony","Cronos","OKEx","MultiVAC","MetisNetwork","Moonbeam","Token","chainId","resourceId","equals","other","equalsResourceId","sortsBefore","toLowerCase","currencyEquals","currencyA","currencyB","WETH","Decimal","toFormat","_Decimal","Big","_Big","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","Fraction","numerator","denominator","invert","otherParsed","equal","multiply","subtract","equalTo","toSignificant","significantDigits","format","rounding","groupSeparator","Number","isInteger","set","precision","quotient","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","remainder","CurrencyAmount","currency","amount","parsedAmount","exponentiate","ether","raw","toExact","TokenAmount","token","Price","baseCurrency","quoteCurrency","scalar","fromRoute","route","prices","pairs","entries","i","pair","path","token0","reserve0","reserve1","slice","reduce","accumulator","currentValue","fraction","quote","currencyAmount","adjusted","PAIR_ADDRESS_CACHE","Pair","tokenAmountA","tokenAmountB","tokenAmounts","liquidityToken","tokenA","tokenB","tokens","undefined","getCreate2Address","keccak256","pack","involvesToken","token1","priceOf","token0Price","token1Price","reserveOf","getOutputAmount","inputAmount","inputReserve","outputReserve","inputAmountWithFee","outputAmount","getInputAmount","getLiquidityMinted","totalSupply","liquidity","amount0","amount1","getLiquidityValue","feeOn","kLast","totalSupplyAdjusted","kLastParsed","rootK","rootKLast","feeLiquidity","Route","input","output","every","includes","currentInput","midPrice","_100_PERCENT","Percent","computePriceImpact","exactQuote","slippage","inputOutputComparator","a","b","tradeComparator","ioComp","priceImpact","wrappedAmount","wrappedCurrency","Trade","tradeType","amounts","Array","nextPairs","EXACT_INPUT","nextPair","EXACT_OUTPUT","executionPrice","nextMidPrice","exactIn","amountIn","exactOut","amountOut","minimumAmountOut","slippageTolerance","slippageAdjustedAmountOut","maximumAmountIn","slippageAdjustedAmountIn","bestTradeExactIn","currencyAmountIn","currencyOut","currentPairs","originalAmountIn","bestTrades","maxNumResults","maxHops","tokenOut","isInsufficientInputAmountError","pairsExcludingThisPair","concat","bestTradeExactOut","currencyIn","currencyAmountOut","originalAmountOut","tokenIn","isInsufficientReservesError","toHex","ZERO_HEX","Router","swapCallParameters","trade","options","etherIn","etherOut","ttl","to","recipient","allowedSlippage","map","deadline","Math","floor","Date","getTime","useFeeOnTransfer","Boolean","feeOnTransfer","methodName","args","TOKEN_DECIMALS_CACHE","Fetcher","fetchTokenData","provider","getDefaultProvider","getNetwork","Contract","ERC20","then","parsedDecimals","fetchPairData","IUniswapV2Pair","abi","getReserves","reserves0","reserves1","balances"],"mappings":"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"}